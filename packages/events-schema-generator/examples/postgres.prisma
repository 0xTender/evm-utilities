
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model AccessControl {
    id      Int    @id @default(autoincrement())
    address String
    chainId Int
    transactionHash String

    deploymentBlock  Int
    indexedTillBlock Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    AdminModifiedAccessControl AdminModifiedAccessControl[]
    OwnershipTransferredAccessControl OwnershipTransferredAccessControl[]
    
}   


model AdminModifiedAccessControl {
    id      Int    @id @default(autoincrement())
    AccessControl AccessControl @relation(fields: [AccessControlId], references: [id])
    AccessControlId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data AdminModifiedAccessControlEvent?
}

model AdminModifiedAccessControlEvent {
    id      Int    @id @default(autoincrement())
    AdminModifiedAccessControl AdminModifiedAccessControl @relation(fields: [AdminModifiedAccessControlId], references: [id])
    AdminModifiedAccessControlId Int @unique
    account String
    isAdmin String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model OwnershipTransferredAccessControl {
    id      Int    @id @default(autoincrement())
    AccessControl AccessControl @relation(fields: [AccessControlId], references: [id])
    AccessControlId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data OwnershipTransferredAccessControlEvent?
}

model OwnershipTransferredAccessControlEvent {
    id      Int    @id @default(autoincrement())
    OwnershipTransferredAccessControl OwnershipTransferredAccessControl @relation(fields: [OwnershipTransferredAccessControlId], references: [id])
    OwnershipTransferredAccessControlId Int @unique
    previousOwner String
    newOwner String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model Candy {
    id      Int    @id @default(autoincrement())
    address String
    chainId Int
    transactionHash String

    deploymentBlock  Int
    indexedTillBlock Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    AdminModifiedCandy AdminModifiedCandy[]
    ApprovalCandy ApprovalCandy[]
    ApprovalForAllCandy ApprovalForAllCandy[]
    OwnershipTransferredCandy OwnershipTransferredCandy[]
    TransferCandy TransferCandy[]
    
}   


model AdminModifiedCandy {
    id      Int    @id @default(autoincrement())
    Candy Candy @relation(fields: [CandyId], references: [id])
    CandyId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data AdminModifiedCandyEvent?
}

model AdminModifiedCandyEvent {
    id      Int    @id @default(autoincrement())
    AdminModifiedCandy AdminModifiedCandy @relation(fields: [AdminModifiedCandyId], references: [id])
    AdminModifiedCandyId Int @unique
    account String
    isAdmin String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model ApprovalCandy {
    id      Int    @id @default(autoincrement())
    Candy Candy @relation(fields: [CandyId], references: [id])
    CandyId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data ApprovalCandyEvent?
}

model ApprovalCandyEvent {
    id      Int    @id @default(autoincrement())
    ApprovalCandy ApprovalCandy @relation(fields: [ApprovalCandyId], references: [id])
    ApprovalCandyId Int @unique
    owner String
    approved String
    tokenId String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model ApprovalForAllCandy {
    id      Int    @id @default(autoincrement())
    Candy Candy @relation(fields: [CandyId], references: [id])
    CandyId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data ApprovalForAllCandyEvent?
}

model ApprovalForAllCandyEvent {
    id      Int    @id @default(autoincrement())
    ApprovalForAllCandy ApprovalForAllCandy @relation(fields: [ApprovalForAllCandyId], references: [id])
    ApprovalForAllCandyId Int @unique
    owner String
    operator String
    approved String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model OwnershipTransferredCandy {
    id      Int    @id @default(autoincrement())
    Candy Candy @relation(fields: [CandyId], references: [id])
    CandyId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data OwnershipTransferredCandyEvent?
}

model OwnershipTransferredCandyEvent {
    id      Int    @id @default(autoincrement())
    OwnershipTransferredCandy OwnershipTransferredCandy @relation(fields: [OwnershipTransferredCandyId], references: [id])
    OwnershipTransferredCandyId Int @unique
    previousOwner String
    newOwner String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model TransferCandy {
    id      Int    @id @default(autoincrement())
    Candy Candy @relation(fields: [CandyId], references: [id])
    CandyId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data TransferCandyEvent?
}

model TransferCandyEvent {
    id      Int    @id @default(autoincrement())
    TransferCandy TransferCandy @relation(fields: [TransferCandyId], references: [id])
    TransferCandyId Int @unique
    from String
    to String
    tokenId String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model ActorFactory {
    id      Int    @id @default(autoincrement())
    address String
    chainId Int
    transactionHash String

    deploymentBlock  Int
    indexedTillBlock Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    AdminModifiedActorFactory AdminModifiedActorFactory[]
    OwnershipTransferredActorFactory OwnershipTransferredActorFactory[]
    
}   


model AdminModifiedActorFactory {
    id      Int    @id @default(autoincrement())
    ActorFactory ActorFactory @relation(fields: [ActorFactoryId], references: [id])
    ActorFactoryId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data AdminModifiedActorFactoryEvent?
}

model AdminModifiedActorFactoryEvent {
    id      Int    @id @default(autoincrement())
    AdminModifiedActorFactory AdminModifiedActorFactory @relation(fields: [AdminModifiedActorFactoryId], references: [id])
    AdminModifiedActorFactoryId Int @unique
    account String
    isAdmin String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model OwnershipTransferredActorFactory {
    id      Int    @id @default(autoincrement())
    ActorFactory ActorFactory @relation(fields: [ActorFactoryId], references: [id])
    ActorFactoryId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data OwnershipTransferredActorFactoryEvent?
}

model OwnershipTransferredActorFactoryEvent {
    id      Int    @id @default(autoincrement())
    OwnershipTransferredActorFactory OwnershipTransferredActorFactory @relation(fields: [OwnershipTransferredActorFactoryId], references: [id])
    OwnershipTransferredActorFactoryId Int @unique
    previousOwner String
    newOwner String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model Registry {
    id      Int    @id @default(autoincrement())
    address String
    chainId Int
    transactionHash String

    deploymentBlock  Int
    indexedTillBlock Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    AdminModifiedRegistry AdminModifiedRegistry[]
    ChangeActorStateRegistry ChangeActorStateRegistry[]
    FactoryAddressChangedRegistry FactoryAddressChangedRegistry[]
    OwnershipTransferredRegistry OwnershipTransferredRegistry[]
    RegisterActorRegistry RegisterActorRegistry[]
    
}   


model AdminModifiedRegistry {
    id      Int    @id @default(autoincrement())
    Registry Registry @relation(fields: [RegistryId], references: [id])
    RegistryId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data AdminModifiedRegistryEvent?
}

model AdminModifiedRegistryEvent {
    id      Int    @id @default(autoincrement())
    AdminModifiedRegistry AdminModifiedRegistry @relation(fields: [AdminModifiedRegistryId], references: [id])
    AdminModifiedRegistryId Int @unique
    account String
    isAdmin String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model ChangeActorStateRegistry {
    id      Int    @id @default(autoincrement())
    Registry Registry @relation(fields: [RegistryId], references: [id])
    RegistryId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data ChangeActorStateRegistryEvent?
}

model ChangeActorStateRegistryEvent {
    id      Int    @id @default(autoincrement())
    ChangeActorStateRegistry ChangeActorStateRegistry @relation(fields: [ChangeActorStateRegistryId], references: [id])
    ChangeActorStateRegistryId Int @unique
    actorAddress String
    state String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model FactoryAddressChangedRegistry {
    id      Int    @id @default(autoincrement())
    Registry Registry @relation(fields: [RegistryId], references: [id])
    RegistryId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data FactoryAddressChangedRegistryEvent?
}

model FactoryAddressChangedRegistryEvent {
    id      Int    @id @default(autoincrement())
    FactoryAddressChangedRegistry FactoryAddressChangedRegistry @relation(fields: [FactoryAddressChangedRegistryId], references: [id])
    FactoryAddressChangedRegistryId Int @unique
    factoryAddress String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model OwnershipTransferredRegistry {
    id      Int    @id @default(autoincrement())
    Registry Registry @relation(fields: [RegistryId], references: [id])
    RegistryId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data OwnershipTransferredRegistryEvent?
}

model OwnershipTransferredRegistryEvent {
    id      Int    @id @default(autoincrement())
    OwnershipTransferredRegistry OwnershipTransferredRegistry @relation(fields: [OwnershipTransferredRegistryId], references: [id])
    OwnershipTransferredRegistryId Int @unique
    previousOwner String
    newOwner String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model RegisterActorRegistry {
    id      Int    @id @default(autoincrement())
    Registry Registry @relation(fields: [RegistryId], references: [id])
    RegistryId Int

    block   Int
    transactionHash String
    logIndex Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    data RegisterActorRegistryEvent?
}

model RegisterActorRegistryEvent {
    id      Int    @id @default(autoincrement())
    RegisterActorRegistry RegisterActorRegistry @relation(fields: [RegisterActorRegistryId], references: [id])
    RegisterActorRegistryId Int @unique
    actorAddress String
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


